WIND-WAVES OPTIC LAB  (WWOL)

This software is for processing video of waves on a sea surface in any of common
format in order to compute a 3D wind waves spectrum.

PREREQUISITES:
    python 3 ( + developer package)
    numpy    ( + get numpy.i, in most cases the script will do it for you)
    scipy
    wxPython
    wxFormBuilder (not needed if you don't edit GUI)
    Json Schema
    swig
    py2exe (windows only)
    ffmpeg  (*)
    gnuplot (*)

    (*) these are standalone applications. In order to proceed
    we assume that they are installed and accessible from the command line.
    E.g. Windows users are welcome to add their bin folders to PATH.

INSTALLATION AND RUNNING:
  General procedure:  
    1) Install prerequisites from the list above and according to your OS way.
    2) Get some stuff ready (this is done once and Windows users should run
       this step from the appropriate MS Visual C shell):
         python3 postcheckout.py
    3) Run:
        python3 start_wwol.py
    NOTE: you may need to call just 'python' or whatever your system is
    configured to.
  
  MacOS:
    Refer to snippets/macos_install.txt
  
  Windows:
    Despite the above general procedure should work fine on Windows, our users
    might feel more comfortable about download the already compiled release.
    Download link can be found on the main page of the project on the GitHub.
    NOTE:
    Don't forget to install 'ffmpeg' and 'gnuplot' before running our .exe, and
    make sure that they are accessible from command line via just typing:
       ffmpeg
       gnuplot
    This can be provided by adding their bin folders to PATH.

Windows, building exe:
    From MS Visual C shell do:
    python3 setup.py py2exe

HOW TO USE:
    1) The following 'video lesson' is the only form docs that we have:
           https://youtu.be/7ZpIUnl4PJE
       
    2) Samples are located in:
       Project files:
           test_configs/
       Data files, which the above project files refer to:
           stuff/
       Data files for the test 'images2.wwl' are generated by 'postcheckout.py'
       Other files should be downloaded from the separate repository:
          https://zenodo.org/record/7942014#.ZGPRYi96Bao
          Alternative link: https://doi.org/10.5281/zenodo.7942013
       Just download everything from the above link to the 'stuff' folder.
       Finally, the contenc of stuff folder should look like:
          stuff/
            images2_test/
              00000.bmp
              00001.bmp
              ...
            GOPR0330.MP4
            freq2.txt
            ...
    
    3) Underlying theory is explained in:
           B. M. Salin & M. B. Salin "Combined Method for Measuring..."
           Radiophysics and Quantum Electronics. 58(2015), No.2, P.114-123 
           https://doi.org/10.1007/s11141-015-9586-1
       See also at arXiv (open access): 
           https://arxiv.org/abs/1303.5248
           https://doi.org/10.48550/arXiv.1303.5248
       If you find WWOL helpful for your research, please cite the above paper.
           
    
POSSIBLE ISSUES: 
    0) Precompile the extension
      Under normal conditions it is done by 'postcheckout.py' script.
      The direct command is:
              python3 setup.py build_ext --inplace
      Windows users should run from the appropriate MS Visual C shell

    1) WINDOWS USERS:
      (The third reminder)
      * check that ffmpeg's bin folder was added to your PATH
        otherwise edit variable 'FFMPEG_BIN_PATH' in 'wwol/engine/loading.py'
        to put the full path into it;           
      * check that gnuplot's binary folder was added to your PATH
        (no override for this)
        
    2) GETTING numpy.i:
        Short story:
          Under normal conditions it is done by 'postcheckout.py' script.
          Alternatively you can manualy run this script:
            python3 wwol/setup_/numpy_i_getter.py
          and in most cases it will succeed.

        Long story:
          According to this piece of documentation:
          https://numpy.org/doc/stable/reference/swig.interface-file.html
          the desired file 'numpy.i' is located in the numpy folder, 
          'tools/swig/' subfolder. 
          However it may be excluded from your installation.
          In this case you should download it from the Internet repo.
          Finally, a copy of 'numpy.i' should appear in 'wol/engine/c_part/'

    3) Linux users: check if your distro provides 'ffmpeg' or 'avconv'
       In case of using 'avconf', make '.wwol.config' file in your home folder
       and put the following text in it:
    {
      "ffmpeg":{
        "FFMPEG_BIN_PATH":"",
        "FFMPEG_NAME":"avconv",
        "FFPROBE_NAME":"avprobe"
      }
    }
    
    4) Distortion camera lenses are not fully supported yet


QUESTIONS:
    mikesalin@gmail.com
    mikesalin@ipfran.ru
    Mike Salin
    
    
